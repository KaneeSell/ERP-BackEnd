// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(user)
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Produtos {
  id         Int                 @id @default(autoincrement())
  name       String
  value      Float
  isAtive    Boolean             @default(true)
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  deletedAt  DateTime?
  movimentos Movimento_Estoque[]
}

model Estoque {
  id         Int                 @id @default(autoincrement())
  name       String              @unique
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  deletedAt  DateTime?
  movimentos Movimento_Estoque[]
}

enum Tipo {
  Entrada
  Saida
}

model Movimento_Estoque {
  id         Int       @id @default(autoincrement())
  produtoId  Int
  produto    Produtos  @relation(fields: [produtoId], references: [id])
  estoqueId  Int
  estoque    Estoque   @relation(fields: [estoqueId], references: [id])
  descricao  String?
  tipo       Tipo
  quantidade Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}
